{"version":3,"sources":["components/routes/feedback/index.js"],"names":["validationSchema","yup","shape","fullname","required","email","message","min","FeedBack","pathname","useLocation","isContactForm","replace","formik","useFormik","initialValues","validateOnChange","onSubmit","values","axios","post","errors","touched","id","className","handleSubmit","type","name","value","onChange","handleChange","placeholder"],"mappings":"sIAAA,6GAOMA,GAPN,OAOyBC,MAAaC,MAAM,CAC1CC,SAAUF,MAAaG,SAAS,wHAChCC,MAAOJ,MAAaI,MAAM,oDAAiBD,SAAS,wHACpDE,QAASL,MAENM,IAAI,GAAI,yLACRH,SAAS,2HAGC,SAASI,IAAY,IAC5BC,EAAaC,cAAbD,SAEAE,EAA6B,aADnCF,EAAWA,EAASG,QAAQ,IAAK,KAG3BC,EAASC,YAAU,CACvBC,cAAe,CACbZ,SAAU,GACV,aAAc,GACdE,MAAO,GACPC,QAAS,IAEXN,mBACAgB,kBAAkB,EAClBC,SAAU,SAACC,GACTC,IAAMC,KAAK,mBAAoBF,MAG3BG,EAAoBR,EAApBQ,OAAQC,EAAYT,EAAZS,QAEhB,OACE,yBAAKC,GAAG,WAAWC,UAAU,+DAC3B,0BAAMA,UAAU,SAASP,SAAUJ,EAAOY,cACxC,yBAAKD,UAAU,cACb,2BACEA,UAAU,0BACVE,KAAK,OACLC,KAAK,WACLC,MAAOf,EAAOK,OAAOf,SACrB0B,SAAUhB,EAAOiB,aACjBC,YAAY,gJAEbV,EAAOlB,UAAYmB,EAAQnB,UAC1B,uBAAGqB,UAAU,2BAA2BH,EAAOlB,YAGjDQ,GACA,yBAAKa,UAAU,cACb,2BACEA,UAAU,0BACVE,KAAK,OACLC,KAAK,aACLC,MAAOf,EAAOK,OAAO,cACrBW,SAAUhB,EAAOiB,aACjBC,YAAY,+GAIlB,yBAAKP,UAAU,cACb,2BACEA,UAAU,0BACVE,KAAK,QACLC,KAAK,QACLC,MAAOf,EAAOK,OAAOb,MACrBwB,SAAUhB,EAAOiB,aACjBC,YAAY,kHAEbV,EAAOhB,OAASiB,EAAQjB,OACvB,uBAAGmB,UAAU,2BAA2BH,EAAOhB,QAGnD,yBAAKmB,UAAU,cACb,8BACEA,UAAU,0BACVG,KAAK,UACLC,MAAOf,EAAOK,OAAOZ,QACrBuB,SAAUhB,EAAOiB,aACjBC,YAAapB,EAAgB,2GAAwB,2IAEtDU,EAAOf,SAAWgB,EAAQhB,SACzB,uBAAGkB,UAAU,2BAA2BH,EAAOf,UAGnD,4BAAQoB,KAAK,SAASF,UAAU,yDAAhC","file":"static/js/6.64d516a6.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport './style.sass';\n\nconst validationSchema = yup.object().shape({\n  fullname: yup.string().required('Это обязательное поле'),\n  email: yup.string().email('Укажите email').required('Это обязательное поле'),\n  message: yup\n    .string()\n    .min(10, 'Минимальное количество символов - 10')\n    .required('Это обязательное поле'),\n});\n\nexport default function FeedBack() {\n  let { pathname } = useLocation();\n  pathname = pathname.replace('/', '');\n  const isContactForm = pathname === 'contact';\n\n  const formik = useFormik({\n    initialValues: {\n      fullname: '',\n      'track-code': '',\n      email: '',\n      message: '',\n    },\n    validationSchema,\n    validateOnChange: true,\n    onSubmit: (values) => {\n      axios.post('/api/v1/feedback', values);\n    },\n  });\n  const { errors, touched } = formik;\n\n  return (\n    <div id='feedback' className='min-vh-100 d-flex justify-content-center align-items-center'>\n      <form className='shadow' onSubmit={formik.handleSubmit}>\n        <div className='form-group'>\n          <input\n            className='form-control badge-pill'\n            type='text'\n            name='fullname'\n            value={formik.values.fullname}\n            onChange={formik.handleChange}\n            placeholder='Представьтесь пожалуйста'\n          />\n          {errors.fullname && touched.fullname && (\n            <p className='text-center text-danger'>{errors.fullname}</p>\n          )}\n        </div>\n        {!isContactForm && (\n          <div className='form-group'>\n            <input\n              className='form-control badge-pill'\n              type='text'\n              name='track-code'\n              value={formik.values['track-code']}\n              onChange={formik.handleChange}\n              placeholder='Укажите ваш трек-код'\n            />\n          </div>\n        )}\n        <div className='form-group'>\n          <input\n            className='form-control badge-pill'\n            type='email'\n            name='email'\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            placeholder='Укажите контактный email'\n          />\n          {errors.email && touched.email && (\n            <p className='text-center text-danger'>{errors.email}</p>\n          )}\n        </div>\n        <div className='form-group'>\n          <textarea\n            className='form-control badge-pill'\n            name='message'\n            value={formik.values.message}\n            onChange={formik.handleChange}\n            placeholder={isContactForm ? 'Ждём ваше сообщение' : 'Укажите причину возврата'}\n          />\n          {errors.message && touched.message && (\n            <p className='text-center text-danger'>{errors.message}</p>\n          )}\n        </div>\n        <button type='submit' className='btn btn-outline-success btn-block btn-lg rounded-pill'>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}